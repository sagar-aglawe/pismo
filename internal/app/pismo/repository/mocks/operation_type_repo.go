// Code generated by mockery v2.42.1. DO NOT EDIT.

package repository_mocks

import mock "github.com/stretchr/testify/mock"

// IOperationTypeRepo is an autogenerated mock type for the IOperationTypeRepo type
type IOperationTypeRepo struct {
	mock.Mock
}

// Create provides a mock function with given fields: model, tableMame
func (_m *IOperationTypeRepo) Create(model interface{}, tableMame string) error {
	ret := _m.Called(model, tableMame)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, string) error); ok {
		r0 = rf(model, tableMame)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// First provides a mock function with given fields: searchModel, destinationModel
func (_m *IOperationTypeRepo) First(searchModel interface{}, destinationModel interface{}) error {
	ret := _m.Called(searchModel, destinationModel)

	if len(ret) == 0 {
		panic("no return value specified for First")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, interface{}) error); ok {
		r0 = rf(searchModel, destinationModel)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIOperationTypeRepo creates a new instance of IOperationTypeRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIOperationTypeRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *IOperationTypeRepo {
	mock := &IOperationTypeRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
